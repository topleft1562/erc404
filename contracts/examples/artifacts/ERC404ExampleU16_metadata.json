{
	"compiler": {
		"version": "0.8.20+commit.a1b79de6"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "name_",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "symbol_",
						"type": "string"
					},
					{
						"internalType": "uint8",
						"name": "decimals_",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "maxTotalSupplyERC721_",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "initialOwner_",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "initialMintRecipient_",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "AlreadyExists",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "DecimalsTooLow",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InsufficientAllowance",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidApproval",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidExemption",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidOperator",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidRecipient",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidSender",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidSigner",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidSpender",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidTokenId",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "MintLimitReached",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "NotFound",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "OwnedIndexOverflow",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "PermitDeadlineExpired",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "QueueEmpty",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "QueueFull",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "QueueOutOfBounds",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "RecipientIsERC721TransferExempt",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "Unauthorized",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "UnsafeRecipient",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "ApprovalForAll",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "DOMAIN_SEPARATOR",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "ID_ENCODING_PREFIX",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender_",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "valueOrId_",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender_",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value_",
						"type": "uint256"
					}
				],
				"name": "erc20Approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner_",
						"type": "address"
					}
				],
				"name": "erc20BalanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "erc20TotalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from_",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to_",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value_",
						"type": "uint256"
					}
				],
				"name": "erc20TransferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender_",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "id_",
						"type": "uint256"
					}
				],
				"name": "erc721Approve",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner_",
						"type": "address"
					}
				],
				"name": "erc721BalanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "erc721TotalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "target_",
						"type": "address"
					}
				],
				"name": "erc721TransferExempt",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from_",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to_",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "id_",
						"type": "uint256"
					}
				],
				"name": "erc721TransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "getApproved",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getERC721QueueLength",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "start_",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "count_",
						"type": "uint256"
					}
				],
				"name": "getERC721TokensInQueue",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "isApprovedForAll",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "minted",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "nonces",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner_",
						"type": "address"
					}
				],
				"name": "owned",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id_",
						"type": "uint256"
					}
				],
				"name": "ownerOf",
				"outputs": [
					{
						"internalType": "address",
						"name": "erc721Owner",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner_",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender_",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value_",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "deadline_",
						"type": "uint256"
					},
					{
						"internalType": "uint8",
						"name": "v_",
						"type": "uint8"
					},
					{
						"internalType": "bytes32",
						"name": "r_",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "s_",
						"type": "bytes32"
					}
				],
				"name": "permit",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from_",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to_",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "id_",
						"type": "uint256"
					}
				],
				"name": "safeTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from_",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to_",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "id_",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "data_",
						"type": "bytes"
					}
				],
				"name": "safeTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "operator_",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "approved_",
						"type": "bool"
					}
				],
				"name": "setApprovalForAll",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account_",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "value_",
						"type": "bool"
					}
				],
				"name": "setERC721TransferExempt",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "state_",
						"type": "bool"
					}
				],
				"name": "setSelfERC721TransferExempt",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id_",
						"type": "uint256"
					}
				],
				"name": "tokenURI",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to_",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value_",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from_",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to_",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "valueOrId_",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "units",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"errors": {
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				],
				"QueueEmpty()": [
					{
						"details": "An operation (e.g. {front}) couldn't be completed due to the queue being empty."
					}
				],
				"QueueFull()": [
					{
						"details": "A push operation couldn't be completed due to the queue being full."
					}
				],
				"QueueOutOfBounds()": [
					{
						"details": "An operation (e.g. {at}) couldn't be completed due to an index being out of bounds."
					}
				]
			},
			"kind": "dev",
			"methods": {
				"approve(address,uint256)": {
					"details": "This function assumes the operator is attempting to approve an ERC-721      if valueOrId is less than the minted count. Unlike setApprovalForAll,      spender_ must be allowed to be 0x0 so that approval can be revoked."
				},
				"erc20Approve(address,uint256)": {
					"details": "Providing type(uint256).max for approval value results in an      unlimited approval that is not deducted from on transfers."
				},
				"erc20TransferFrom(address,address,uint256)": {
					"details": "This function is recommended for ERC20 transfers"
				},
				"erc721TransferFrom(address,address,uint256)": {
					"details": "This function is recommended for ERC721 transfers"
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
					"details": "Providing type(uint256).max for permit value results in an      unlimited approval that is not deducted from on transfers."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"supportsInterface(bytes4)": {
					"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
				},
				"transfer(address,uint256)": {
					"details": "This function assumes the operator is attempting to transfer as ERC-20      given this function is only supported on the ERC-20 interface.      Treats even small amounts that are valid ERC-721 ids as ERC-20s."
				},
				"transferFrom(address,address,uint256)": {
					"details": "This function assumes the operator is attempting to transfer an ERC-721      if valueOrId is less than or equal to current max id."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"DOMAIN_SEPARATOR()": {
					"notice": "Returns domain initial domain separator, or recomputes if chain id is not equal to initial chain id"
				},
				"approve(address,uint256)": {
					"notice": "Function for token approvals"
				},
				"erc20TransferFrom(address,address,uint256)": {
					"notice": "Function for ERC-20 transfers from."
				},
				"erc721TransferExempt(address)": {
					"notice": "Function to check if address is transfer exempt"
				},
				"erc721TransferFrom(address,address,uint256)": {
					"notice": "Function for ERC-721 transfers from."
				},
				"ownerOf(uint256)": {
					"notice": "Function to find owner of a given ERC-721 token"
				},
				"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
					"notice": "Function for EIP-2612 permits"
				},
				"safeTransferFrom(address,address,uint256)": {
					"notice": "Function for ERC-721 transfers with contract support. This function only supports moving valid ERC-721 ids, as it does not exist on the ERC-20 spec and will revert otherwise."
				},
				"safeTransferFrom(address,address,uint256,bytes)": {
					"notice": "Function for ERC-721 transfers with contract support and callback data. This function only supports moving valid ERC-721 ids, as it does not exist on the ERC-20 spec and will revert otherwise."
				},
				"setApprovalForAll(address,bool)": {
					"notice": "Function for ERC-721 approvals"
				},
				"setSelfERC721TransferExempt(bool)": {
					"notice": "Function for self-exemption"
				},
				"tokenURI(uint256)": {
					"notice": "tokenURI must be implemented by child contract"
				},
				"transfer(address,uint256)": {
					"notice": "Function for ERC-20 transfers."
				},
				"transferFrom(address,address,uint256)": {
					"notice": "Function for mixed transfers from an operator that may be different than 'from'."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/examples/ERC404ExampleU16.sol": "ERC404ExampleU16"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
				"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
			]
		},
		"@openzeppelin/contracts/interfaces/IERC165.sol": {
			"keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
			"license": "MIT",
			"urls": [
				"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
				"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
			]
		},
		"@openzeppelin/contracts/interfaces/IERC721Receiver.sol": {
			"keccak256": "0x12808acc0c2cbc0b9068755711fd79483b4f002e850d25e0e72e735765b6cd99",
			"license": "MIT",
			"urls": [
				"bzz-raw://8fd1ab9e3091d4c4fc4b34c25b54df5c092c849c8c09d722a34186bd051b0890",
				"dweb:/ipfs/QmUqykAZfKRHEkYVRmXKsFqvLwyUFPrukdWdAmXDkixJAL"
			]
		},
		"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
			"keccak256": "0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49",
			"license": "MIT",
			"urls": [
				"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22",
				"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"@openzeppelin/contracts/utils/Strings.sol": {
			"keccak256": "0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792",
			"license": "MIT",
			"urls": [
				"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453",
				"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"
			]
		},
		"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
			"license": "MIT",
			"urls": [
				"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
				"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
			]
		},
		"@openzeppelin/contracts/utils/math/Math.sol": {
			"keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
			"license": "MIT",
			"urls": [
				"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
				"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
			]
		},
		"@openzeppelin/contracts/utils/math/SignedMath.sol": {
			"keccak256": "0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72",
			"license": "MIT",
			"urls": [
				"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc",
				"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"
			]
		},
		"contracts/ERC404U16.sol": {
			"keccak256": "0x5e78ada78e541b1cd50d476493966602ea247a0641a1fc8d89ff4971b169aafd",
			"license": "MIT",
			"urls": [
				"bzz-raw://636c18696967ca9d2fb4ab36e3558b8460a2ea8f8872fe798b0b9e3f30c6f9f2",
				"dweb:/ipfs/Qmaf9MGExZhkxRQmMcSvXJHa7FPbcEBr6eQqbYMRuiJmTy"
			]
		},
		"contracts/examples/ERC404ExampleU16.sol": {
			"keccak256": "0x473aeb95249d1fd2d3d6e03e043d76a920699eec238770e1cf5e08ed521ac7e0",
			"license": "MIT",
			"urls": [
				"bzz-raw://eb089fc01ec3d8b43a4f6316e1e3ef73f2852efcd2dc438c545b2eb6a6684455",
				"dweb:/ipfs/Qmd7fwkvHxE5YxC5EZqem99924ig6yyQoJJyVogNqa6U4x"
			]
		},
		"contracts/interfaces/IERC404.sol": {
			"keccak256": "0x4f38e888016e76d67423c25faa61979f747c04685ae9bb05a86e6264dfea7b12",
			"license": "MIT",
			"urls": [
				"bzz-raw://05f53932dfb6703c3b1fb90f2433dded44beaf0768249ae6b9a5ab0d16b46039",
				"dweb:/ipfs/QmYb8UGo88pRQ9knmDW97kuqA6aRdXL5Tzh9bzm4n74qLF"
			]
		},
		"contracts/lib/ERC20Events.sol": {
			"keccak256": "0x7bea6a0863d009f035dd90858479255b03645fa844ddd83ce22a0cbb1704ee8d",
			"license": "MIT",
			"urls": [
				"bzz-raw://096d4b05810e90d7a22c292a43591f333b60f643cc80e2a63b40804c7e06034e",
				"dweb:/ipfs/QmWok825gRzvX3u91G2syHnBVyxeTMStdgkAZ7vi1U7NLd"
			]
		},
		"contracts/lib/ERC721Events.sol": {
			"keccak256": "0xc5e4791de449d2e9baa85979c5059133f212f8bc527d796858fc3253152a9dfc",
			"license": "MIT",
			"urls": [
				"bzz-raw://8bf197c7b629c075446382b072206747522c75c592377ac611678dcc358c44ae",
				"dweb:/ipfs/QmTbumiTfzZtXshb6VTw4AA7oQpUrpvLJJoMEzDYdeeUJN"
			]
		},
		"contracts/lib/PackedDoubleEndedQueue.sol": {
			"keccak256": "0x5d3ca19b9f16dd8c2f8cb34264347ccc504289519323ceed6f4c9946d1370f79",
			"license": "MIT",
			"urls": [
				"bzz-raw://c89972a6d753dbb03141b10f4bcfe42887ebdd30cf68a8895cfbaa6589f2b95a",
				"dweb:/ipfs/QmQYyvU6JGQEXrNmnsExGWGybGfbF7S3AMx3ixomsW8p3W"
			]
		}
	},
	"version": 1
}